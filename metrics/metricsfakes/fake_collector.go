// Code generated by counterfeiter. DO NOT EDIT.
package metricsfakes

import (
	sync "sync"

	device "github.com/mrbuk/sop112_exporter/device"
	metrics "github.com/mrbuk/sop112_exporter/metrics"
)

type FakeCollector struct {
	CollectStub        func(device.Powersocket)
	collectMutex       sync.RWMutex
	collectArgsForCall []struct {
		arg1 device.Powersocket
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeCollector) Collect(arg1 device.Powersocket) {
	fake.collectMutex.Lock()
	fake.collectArgsForCall = append(fake.collectArgsForCall, struct {
		arg1 device.Powersocket
	}{arg1})
	fake.recordInvocation("Collect", []interface{}{arg1})
	fake.collectMutex.Unlock()
	if fake.CollectStub != nil {
		fake.CollectStub(arg1)
	}
}

func (fake *FakeCollector) CollectCallCount() int {
	fake.collectMutex.RLock()
	defer fake.collectMutex.RUnlock()
	return len(fake.collectArgsForCall)
}

func (fake *FakeCollector) CollectCalls(stub func(device.Powersocket)) {
	fake.collectMutex.Lock()
	defer fake.collectMutex.Unlock()
	fake.CollectStub = stub
}

func (fake *FakeCollector) CollectArgsForCall(i int) device.Powersocket {
	fake.collectMutex.RLock()
	defer fake.collectMutex.RUnlock()
	argsForCall := fake.collectArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeCollector) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.collectMutex.RLock()
	defer fake.collectMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeCollector) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ metrics.Collector = new(FakeCollector)
